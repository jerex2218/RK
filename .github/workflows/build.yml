name: Build, Test and Package

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set version
      id: set-version
      run: |
        TAG_VERSION="1.0.0"
        
        BUILD_ID=$(date +'%Y%m%d-%H%M%S')
        SHORT_SHA=$(git rev-parse --short HEAD)
        
        RELEASE_NAME="Release ${TAG_VERSION} (${BUILD_ID})"
        
        DEB_VERSION="${TAG_VERSION}.${BUILD_ID}.${SHORT_SHA}"
        
        echo "tag_version=${TAG_VERSION}" >> $GITHUB_OUTPUT
        echo "release_name=${RELEASE_NAME}" >> $GITHUB_OUTPUT
        echo "deb_version=${DEB_VERSION}" >> $GITHUB_OUTPUT
        
        echo "Tag version: ${TAG_VERSION}"
        echo "Release name: ${RELEASE_NAME}"
        echo "Debian version: ${DEB_VERSION}"
        
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential
        
    - name: Configure and Build
      run: |
        mkdir -p build
        cd build
        cmake -DINSTALL_GTEST=OFF -DPACKAGE_VERSION="${{ steps.set-version.outputs.deb_version }}" ..
        make -j$(nproc)
        
    - name: Run tests
      run: |
        cd build
        ./computer_tests
        
    - name: Create DEB package
      run: |
        cd build
        cpack
        ls -lh *.deb
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deb-package
        path: build/*.deb
        
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${{ steps.set-version.outputs.tag_version }}"
        name: "${{ steps.set-version.outputs.release_name }}"
        files: build/*.deb
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
        generate_release_notes: true
